[MABIGAT]
# Line that starts with # is just a comment.

# The best param found so far will be the opponent of optimizer suggested param.
use_best_param = 1

# Increase this value like 0.55 to absorb the noise in engine vs engine match.
init_best_match_result = 0.5
# ==============================================================================



# ==============================================================================
[OPTUNA]
# Line that starts with # is just a comment.
# study_name is mandatory, don't use a name with space.
# study_name = my study name, bad
# study_name = my_study_name, good

study_name = nnue_study_12
num_trials = 100
# ==============================================================================



# ==============================================================================
[ENGINE]
# Line that starts with # is just a comment.

# engine_file is mandatory
engine_file = ./engine/nodchip_stockfish_2021-03-23.exe

engine_eval_file = ./engine/nn-c3ca321c51c9.nnue
threads = 6
hash_mb = 1024
# ==============================================================================



# ==============================================================================
[CUTECHESS]
# Line that starts with # is just a comment.

# The path/file or file of your python interpreter. Use python 3 only.
# Example:
# c:/python38/python.exe
# Or if it is already in the path, use python.exe or python3.exe
python_file = python.exe

# cutechess-cli will be used to create a match between nets.
# Use full path
cutechess_cli_path = F:/Github/tmp_mabigat/cutechess/cutechess-cli.exe

# By default games=2 and repeat=2, so if rounds is 50, total games will be 100.
rounds = 50

# To use blitz 2s+50ms, use the following.
time_control = "tc=0/2+0.05"

# To use fix depth match use the following.
# time_control = "tc=inf depth=4"

book = F:/CuteChess-CLI/pos/my_startpos.pgn format=pgn order=random

# Default draw adjudications, -draw movenumber=80 movecount=5 score=0
# Default resign adjudications, -resign movecount=4 score=1000 twosided=true
# ==============================================================================



# ==============================================================================
[TRAINING_POS_GENERATION]
num_pos = 1000000
depth = 1
use_nnue = false
write_out_draw_game_in_training_data_generation = 1
set_recommended_uci_options = 1
book = ./book/noob_3moves.epd
# ==============================================================================



# ==============================================================================
[TRAINING_POS_GENERATION_PARAM_TO_OPTIMIZE]
# Line that starts with # is just a comment.

# (min, high, step)
# random_move_count = (5, 20, 1)

# categorical
random_multi_pv = [4, 6, 8, 10]

# random_move_minply = (1, 12, 1)

random_move_like_apery = [0, 1]

write_minply = (4, 20, 1)
# ==============================================================================



# ==============================================================================
[VALIDATION_POS_GENERATION]
# Line that starts with # is just a comment.
# The params here are not optimized.

# The book specified in TRAINING_POS_GENERATION section will be used here as well.

num_pos = 8000
depth = 3
# ==============================================================================



# ==============================================================================
[VALIDATION_POS_GENERATION_PARAM_TO_OPTIMIZE]
# Line that starts with # is just a comment.

# ==============================================================================



# ==============================================================================
[LEARNING]
# Line that starts with # is just a comment.
# The params here are not optimized.

skip_duplicated_positions_in_training = 1
smart_fen_skipping = 1
smart_fen_skipping_for_validation = 1
eval_save_interval = 500000
loss_output_interval = 50000
use_nnue = pure
validation_count = 8000
# ==============================================================================



# ==============================================================================
[LEARNING_PARAM_TO_OPTIMIZE]
# Line that starts with # is just a comment.
# The params here are optimized.

# continuous, pname = (min high step)
max_grad = (0.1, 0.5, 0.1)

# categorical
# validation_count = [2000, 4000, 8000, 16000]

# categorical
# lambda = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
# ==============================================================================



# =============================================================================
[PLOT]
# Line that starts with # is just a comment.

# Select the params being optimized that will be plotted. Number of param is 2 to 4.
plot_params = ["max_grad", "random_multi_pv", "write_minply"]
# =============================================================================
